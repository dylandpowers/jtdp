{"version":3,"sources":["components/TextInput/styles.module.css","containers/SlideshowPage/styles.module.css","components/Firebase/firebase.js","serviceWorker.js","components/TextInput/index.js","components/JWT/utils.js","containers/LoginPage/index.js","components/CountdownDisplay/index.js","containers/SlideshowPage/index.js","routes/ProtectedRoute.js","index.js","containers/LoginPage/styles.module.css","components/CountdownDisplay/styles.module.css"],"names":["module","exports","firebaseConfig","apiKey","process","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","FirebaseContext","React","createContext","Firebase","signInWithEmail","email","password","callback","auth","signInWithEmailAndPassword","then","success","catch","err","fetchAllImageUrls","storage","ref","listAll","res","Promise","all","prefixes","map","prefix","resolve","reject","prefixRes","items","item","getDownloadURL","urls","name","data","firebase","initializeApp","this","withFirebase","Component","props","Consumer","Boolean","window","location","hostname","match","TextInput","placeholder","onChange","autoFocus","value","width","type","customStyle","id","className","styles","input","style","isAuthenticated","jwt","verify","localStorage","getItem","LoginPage","state","isLoggedIn","onSubmit","bind","console","log","setState","e","preventDefault","error","history","push","sign","user","expiresIn","token","setItem","to","container","form","header","target","marginTop","button","tabIndex","withRouter","CountdownDisplay","smallText","date","renderer","completed","text","days","hours","minutes","seconds","SlideshowPage","forEach","imageSet","allImages","updateImageUrlsAndImageMode","newImageMode","imageMode","newImageUrls","Object","keys","key","imageUrls","_shuffleArray","array","i","length","j","Math","floor","random","innerWidth","height","innerHeight","recycle","buttonContainer","buttonSelected","role","onClick","duration","transitionDuration","infinite","indicators","gallery","url","index","src","image","ProtectedRoute","checkAccess","isUserAuthenticated","hasAccess","isLoaded","component","rest","render","ReactDOM","Provider","exact","path","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"iFACAA,EAAOC,QAAU,CAAC,MAAQ,wB,iGCA1BD,EAAOC,QAAU,CAAC,UAAY,0BAA0B,gBAAkB,gCAAgC,OAAS,uBAAuB,QAAU,wBAAwB,eAAiB,+BAA+B,MAAQ,sBAAsB,QAAU,0B,+JCE9PC,EAAiB,CACrBC,OAAQC,0CACRC,WAAY,6BACZC,YAAa,oCACbC,UAAW,aACXC,cAAe,yBACfC,kBAAmB,eACnBC,MAAO,6CAuCHC,EAAkBC,IAAMC,cAAc,MAE7BC,EArCb,aAAe,IAAD,gCAWdC,gBAAkB,SAACC,EAAOC,EAAUC,GAClC,EAAKC,KAAKC,2BAA2BJ,EAAOC,GACzCI,MAAK,kBAAMH,EAAS,CAAEI,SAAS,OAC/BC,OAAM,SAACC,GAAD,OAASN,EAAS,CAAEI,SAAS,EAAOE,IAAKA,QAdtC,KAiBdC,kBAAoB,SAACP,GACnB,EAAKQ,QAAQC,MACVC,UACAP,MAAK,SAACQ,GACLC,QAAQC,IAAIF,EAAIG,SAASC,KAAI,SAACC,GAC5B,OAAO,IAAIJ,SAAQ,SAACK,EAASC,GAC3BF,EAAON,UAAUP,MAAK,SAACgB,GACrBP,QAAQC,IAAIM,EAAUC,MAAML,KAAI,SAACM,GAAD,OAAUA,EAAKC,qBAC5CnB,MAAK,SAACoB,GAAD,OAAUN,EAAQ,CAAEO,KAAMR,EAAOQ,KAAMD,KAAMA,OAClDlB,OAAM,SAACC,GAAD,OAASY,EAAOZ,SACxBD,OAAM,SAACC,GAAD,OAASY,EAAOZ,aAEzBH,MAAK,SAACsB,GAAD,OAAUzB,EAAS,CAAEI,SAAS,EAAMqB,KAAMA,OAClDpB,OAAM,SAACC,GAAD,OAASN,EAAS,CAAEI,SAAS,EAAOE,IAAKA,UAC/CD,OAAM,SAACC,GAAD,OAASN,EAAS,CAAEI,SAAS,EAAOE,IAAKA,QA9BpDoB,IAASC,cAAc3C,GACvB4C,KAAK3B,KAAOyB,IAASzB,OACrB2B,KAAKpB,QAAUkB,IAASlB,WAoCfqB,EAAe,SAAAC,GAAS,OAAI,SAAAC,GAAK,OAC5C,kBAACtC,EAAgBuC,SAAjB,MACG,SAAAN,GAAQ,OAAI,kBAACI,EAAD,iBAAeC,EAAf,CAAsBL,SAAUA,UC3C7BO,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2D,wFCiBSC,EA9BG,SAAC,GAA+E,IAA7EC,EAA4E,EAA5EA,YAAaC,EAA+D,EAA/DA,SAAUC,EAAqD,EAArDA,UAAWC,EAA0C,EAA1CA,MAAOC,EAAmC,EAAnCA,MAAOC,EAA4B,EAA5BA,KAAMC,EAAsB,EAAtBA,YAAaC,EAAS,EAATA,GAEtF,OACE,2BACEC,UAAWC,IAAOC,MAClBC,MAAK,aACHP,MAAM,QAAD,OAAUA,EAAV,aACFE,GAELC,GAAIA,EACJP,YAAaA,EACbC,SAAUA,EACVI,KAAMA,GAAQ,OACdH,UAAWA,EAAY,YAAc,GACrCC,MAAOA,K,iBCfAS,EAAkB,WAC7B,IACUC,IAAIC,OAAOC,aAAaC,QAJjB,aAIsCrE,wBACrD,OAAO,EACP,MAAOoB,GACP,OAAO,ICCLkD,E,YACJ,WAAYzB,GAAQ,IAAD,8BACjB,4CAAMA,KAED0B,MAAQ,CACX3D,MAAO,GACPC,SAAU,GACV2D,YAAY,GAGd,EAAKhC,SAAWK,EAAML,SACtB,EAAKiC,SAAW,EAAKA,SAASC,KAAd,gBAVC,E,iFAcjBC,QAAQC,IAAI,WACZlC,KAAKmC,SAAS,CAAEL,WAAYP,Q,+BAGrBa,GAAI,IAAD,OACVA,EAAEC,iBAEFrC,KAAKF,SAAS7B,gBAAgB+B,KAAK6B,MAAM3D,MAAO8B,KAAK6B,MAAM1D,UAAU,SAACY,GDnBjD,IAACb,EAAOE,ECoBtBW,EAAIP,SDpBWN,ECuBR,EAAK2D,MAAM3D,MDvBIE,ECuBG,SAACM,GACvBA,EACFuD,QAAQK,MAAM5D,GAEd,EAAKyB,MAAMoC,QAAQC,KAAK,cD1BlChB,IAAIiB,KAAK,CAAEC,KAAMxE,GAASZ,uBAAkC,CAAEqF,UAAW,SAAqB,SAACL,EAAOM,GAChGN,EACFlE,EAASkE,IAETZ,aAAamB,QAhBA,YAgBoBD,GACjCxE,SCeE6D,QAAQK,MAAMvD,EAAIL,U,+BAad,IAAD,OACP,OAAIsB,KAAK6B,MAAMC,WACN,kBAAC,IAAD,CAAUgB,GAAG,cAIpB,yBAAK3B,UAAWC,IAAO2B,WACrB,0BAAMhB,SAAU/B,KAAK+B,SAAUZ,UAAWC,IAAO4B,MAC/C,yBAAK7B,UAAWC,IAAO6B,QAAvB,cAGA,kBAAC,EAAD,CACEnC,MAAOd,KAAK6B,MAAM3D,MAClB0C,SAAU,SAACwB,GAAD,OAAO,EAAKD,SAAS,CAAEjE,MAAOkE,EAAEc,OAAOpC,SACjDH,YAAY,QACZK,KAAK,OACLD,MAAM,QAER,kBAAC,EAAD,CACEE,YAAa,CAAEkC,UAAW,QAC1BrC,MAAOd,KAAK6B,MAAM1D,SAClByC,SAAU,SAACwB,GAAD,OAAO,EAAKD,SAAS,CAAEhE,SAAUiE,EAAEc,OAAOpC,SACpDH,YAAY,WACZK,KAAK,WACLD,MAAM,QAER,2BACEI,UAAWC,IAAOgC,OAClBpC,KAAK,SACLF,MAAM,QACNuC,SAAU,U,GAnEEvF,IAAMoC,WA2EfoD,cAAWrD,EAAa2B,I,6EChDxB2B,E,YA/Bb,WAAYpD,GAAQ,IAAD,8BACjB,4CAAMA,KAEDA,MAAQA,EAHI,E,sEAgBjB,OACE,yBAAKgB,UAAWC,IAAO2B,WACrB,uBAAG5B,UAAWC,IAAOoC,WAArB,oCAGA,kBAAC,IAAD,CACEC,KAAK,4BACLC,SAfW,SAACvD,GAChB,OAAIA,EAAMwD,UACD,yBAAKxC,UAAWC,IAAOwC,MAAvB,mBAGF,yBAAKzC,UAAWC,IAAOwC,MAAOzD,EAAM0D,KAApC,KAA4C1D,EAAM2D,MAAlD,KAA2D3D,EAAM4D,QAAjE,KAA4E5D,EAAM6D,QAAlF,a,GAdkBlG,IAAMoC,WCU/B+D,E,YACJ,WAAY9D,GAAQ,IAAD,8BACjB,4CAAMA,KAkBRxB,kBAAoB,SAACP,GACnB,EAAK0B,SAASnB,mBAAkB,SAAAI,GAC1BA,EAAIP,SACNO,EAAIc,KAAKqE,SAAQ,SAACC,GAChB,EAAKC,UAAUD,EAASvE,MAAQuE,EAASxE,QAE3C,EAAK0E,4BA7Ba,gBA+BlBpC,QAAQK,MAAMvD,EAAIL,SA3BL,EAgCnB2F,4BAA8B,SAACC,GAE7B,GADmB,EAAKzC,MAAM0C,YACTD,EAArB,CAIA,IAAIE,EAAe,GAzCA,QA0CfF,EACFG,OAAOC,KAAK,EAAKN,WAAWF,SAAQ,SAACS,GAAD,OAASH,EAAahC,KAAb,MAAAgC,EAAY,YAAS,EAAKJ,UAAUO,QAEjFH,EAAahC,KAAb,MAAAgC,EAAY,YAAS,EAAKJ,UAAUE,KAEtC,EAAKnC,SAAS,CACZoC,UAAWD,EACXM,UAAW,EAAKC,cAAcL,OA9Cf,EAkDnBK,cAAgB,SAACC,GACf,IAAK,IAAIC,EAAID,EAAME,OAAS,EAAGD,EAAI,EAAGA,IAAK,CACzC,IAAME,EAAIC,KAAKC,MAAMD,KAAKE,UAAYL,EAAI,IADD,EAElB,CAACD,EAAMG,GAAIH,EAAMC,IAAvCD,EAAMC,GAFkC,KAE9BD,EAAMG,GAFwB,KAI3C,OAAOH,GApDP,EAAKjD,MAAQ,CACX0C,UAAW,GACXK,UAAW,IAGb,EAAKR,UAAY,GAEjB,EAAKtE,SAAWK,EAAML,SACtB,EAAKnB,kBAAoB,EAAKA,kBAAkBqD,KAAvB,gBACzB,EAAKqC,4BAA8B,EAAKA,4BAA4BrC,KAAjC,gBAZlB,E,iFAgBjBhC,KAAKrB,sB,+BA0CG,IAAD,OASP,OACE,yBAAKwC,UAAWC,IAAO2B,WACvB,kBAAC,IAAD,CAAUhC,MAAOT,OAAO+E,WAAYC,OAAQhF,OAAOiF,YAAaC,SAAS,IACvE,yBAAKrE,UAAWC,IAAOqE,iBACrB,yBACEtE,UA5Ec,gBA4EHnB,KAAK6B,MAAM0C,UAAkCnD,IAAOsE,eAAiBtE,IAAOgC,OACvFuC,KAAK,SACLC,QAAS,SAACxD,GAAD,OAAO,EAAKiC,4BA9EP,iBA2EhB,UAOA,yBACElD,UAlFW,QAkFAnB,KAAK6B,MAAM0C,UAA+BnD,IAAOsE,eAAiBtE,IAAOgC,OACpFuC,KAAK,SACLC,QAAS,SAACxD,GAAD,OAAO,EAAKiC,4BApFV,SAiFb,QAOA,yBACElD,UA3Fa,eA2FFnB,KAAK6B,MAAM0C,UAAiCnD,IAAOsE,eAAiBtE,IAAOgC,OACtFuC,KAAK,SACLC,QAAS,SAACxD,GAAD,OAAO,EAAKiC,4BA7FR,gBA0Ff,UASF,kBAAC,OAAD,iBAlCmB,CACrBwB,SAAU,IACVC,mBAAoB,IACpBC,UAAU,EACVC,YAAY,GA8BV,CAA0B7E,UAAWC,IAAO6E,UAExCjG,KAAK6B,MAAM+C,UAAUzF,KAAI,SAAC+G,EAAKC,GAAN,OAAgB,yBAAKxB,IAAKwB,EAAOC,IAAKF,EAAK/E,UAAWC,IAAOiF,YAG1F,kBAAC,EAAD,W,GApGoBvI,IAAMoC,WA0GnBoD,cAAWrD,EAAagE,I,SCrHjCqC,E,YACJ,WAAYnG,GAAQ,IAAD,8BACjB,4CAAMA,KAcRoG,YAAc,WACZ,IAAMC,EAAsBjF,IAC5B,EAAKY,SAAS,CACZsE,UAAWD,EACXE,UAAU,KAhBZ,EAAK7E,MAAQ,CACX4E,WAAW,EACXC,UAAU,GAGZ,EAAKH,YAAc,EAAKA,YAAYvE,KAAjB,gBARF,E,iFAYjBhC,KAAKuG,gB,+BAWG,IAAD,OACP,IAAKvG,KAAK6B,MAAM6E,SACd,OAAO,KAFF,MAKmC1G,KAAKG,MAA5BD,EALZ,EAKCyG,UAAyBC,EAL1B,6BAOP,OACE,kBAAC,IAAD,iBACMA,EADN,CAEEC,OAAQ,SAAC1G,GACP,OAAO,EAAK0B,MAAM4E,UAChB,kBAACvG,EAAcC,GAEf,kBAAC,IAAD,CAAU2C,GAAG,c,GAtCIhF,IAAMoC,WA8CpBoD,cAAWgD,GCxC1BQ,IAASD,OACP,kBAAChJ,EAAgBkJ,SAAjB,CAA0BjG,MAAO,IAAI9C,GACnC,kBAAC,IAAD,KACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOgJ,OAAK,EAACC,KAAK,IAAIN,UAAW/E,IACjC,kBAAC,EAAD,CAAgBoF,OAAK,EAACC,KAAK,YAAYN,UAAW1C,IAClD,kBAAC,IAAD,CAAO0C,UAAW/E,OAIxBsF,SAASC,eAAe,SP+GpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAM/I,MAAK,SAAAgJ,GACjCA,EAAaC,iB,mBQpInBtK,EAAOC,QAAU,CAAC,UAAY,0BAA0B,KAAO,qBAAqB,OAAS,uBAAuB,UAAY,0BAA0B,OAAS,yB,mBCAnKD,EAAOC,QAAU,CAAC,UAAY,0BAA0B,KAAO,qBAAqB,UAAY,6B","file":"static/js/main.b081d04b.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"input\":\"styles_input__2gjR5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"styles_container__1dViq\",\"buttonContainer\":\"styles_buttonContainer__2Bt1d\",\"button\":\"styles_button__1mMk9\",\"content\":\"styles_content__3yz9K\",\"buttonSelected\":\"styles_buttonSelected__3xAfS\",\"image\":\"styles_image__1cU1t\",\"gallery\":\"styles_gallery__1yrV0\"};","import React from 'react';\nimport firebase from 'firebase';\n\nconst firebaseConfig = {\n  apiKey: process.env.REACT_APP_FIREBASE_API_KEY,\n  authDomain: \"jtdp-60b3d.firebaseapp.com\",\n  databaseURL: \"https://jtdp-60b3d.firebaseio.com\",\n  projectId: \"jtdp-60b3d\",\n  storageBucket: \"jtdp-60b3d.appspot.com\",\n  messagingSenderId: \"786415873557\",\n  appId: \"1:786415873557:web:defecb2e86a857bf8b281c\"\n};\n\nclass Firebase {\n  constructor() {\n    firebase.initializeApp(firebaseConfig);\n    this.auth = firebase.auth();\n    this.storage = firebase.storage();\n  }\n\n  /**\n   * @param {string} email\n   * @param {string} password\n   * @param {function} callback\n   */\n  signInWithEmail = (email, password, callback) => {\n    this.auth.signInWithEmailAndPassword(email, password)\n      .then(() => callback({ success: true }))\n      .catch((err) => callback({ success: false, err: err }));\n  };\n\n  fetchAllImageUrls = (callback) => {\n    this.storage.ref()\n      .listAll()\n      .then((res) => {\n        Promise.all(res.prefixes.map((prefix) => {\n          return new Promise((resolve, reject) => {\n            prefix.listAll().then((prefixRes) => {\n              Promise.all(prefixRes.items.map((item) => item.getDownloadURL()))\n                .then((urls) => resolve({ name: prefix.name, urls: urls }))\n                .catch((err) => reject(err));\n            }).catch((err) => reject(err));\n          });\n        })).then((data) => callback({ success: true, data: data }))\n        .catch((err) => callback({ success: false, err: err }))\n      }).catch((err) => callback({ success: false, err: err }));\n  }\n}\n\nconst FirebaseContext = React.createContext(null);\n\nexport default Firebase;\n\nexport const withFirebase = Component => props => (\n  <FirebaseContext.Consumer>\n    {firebase => <Component {...props} firebase={firebase} />}\n  </FirebaseContext.Consumer>\n);\n\nexport { FirebaseContext };","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport styles from './styles.module.css';\n\nconst TextInput = ({ placeholder, onChange, autoFocus, value, width, type, customStyle, id }) => {\n  // fontSize defaults to 20px if not included\n  return (\n    <input\n      className={styles.input}\n      style={{\n        width: `calc(${width} - 20px)`,\n        ...customStyle,\n      }}\n      id={id}\n      placeholder={placeholder}\n      onChange={onChange}\n      type={type || 'text'}\n      autoFocus={autoFocus ? 'autofocus' : ''}\n      value={value}\n    />\n  );\n};\n\nTextInput.propTypes = {\n  placeholder: PropTypes.string,\n  onChange: PropTypes.func.isRequired,\n  autoFocus: PropTypes.bool,\n  value: PropTypes.any,\n  width: PropTypes.string,\n  type: PropTypes.string,\n  customStyle: PropTypes.object,\n  id: PropTypes.string,\n};\n\nexport default TextInput;\n","import jwt from 'jsonwebtoken';\n\nconst TOKEN_NAME = 'jwt-token';\n\nexport const isAuthenticated = () => {\n  try {\n    let _ = jwt.verify(localStorage.getItem(TOKEN_NAME), process.env.REACT_APP_JWT_SECRET);\n    return true;\n  } catch (err) {\n    return false;\n  }\n};\n\nexport const signToken = (email, callback) => {\n  jwt.sign({ user: email }, process.env.REACT_APP_JWT_SECRET, { expiresIn: 60 * 60 * 24 * 30 }, (error, token) => {\n    if (error) {\n      callback(error);\n    } else {\n      localStorage.setItem(TOKEN_NAME, token);\n      callback();\n    }\n  });\n};","import React from 'react';\nimport { withRouter, Redirect } from 'react-router-dom';\n\nimport styles from './styles.module.css';\nimport { withFirebase } from '../../components/Firebase/firebase';\nimport TextInput from '../../components/TextInput';\nimport { isAuthenticated, signToken } from '../../components/JWT/utils';\n\nconst TOKEN_NAME = 'jwt-token';\n\nclass LoginPage extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      email: '',\n      password: '',\n      isLoggedIn: false\n    };\n\n    this.firebase = props.firebase;\n    this.onSubmit = this.onSubmit.bind(this);\n  }\n\n  componentDidMount() {\n    console.log('Mounted');\n    this.setState({ isLoggedIn: isAuthenticated() });\n  }\n\n  onSubmit(e) {\n    e.preventDefault();\n\n    this.firebase.signInWithEmail(this.state.email, this.state.password, (res) => {\n      if (!res.success) {\n        console.error(res.err);\n      } else {\n        signToken(this.state.email, (err) => {\n          if (err) {\n            console.error(err);\n          } else {\n            this.props.history.push('/iloveyou');\n          }\n        });\n      }\n    });\n  }\n\n  render() {\n    if (this.state.isLoggedIn) {\n      return <Redirect to=\"/iloveyou\" />\n    }\n\n    return (\n      <div className={styles.container}>\n        <form onSubmit={this.onSubmit} className={styles.form}>\n          <div className={styles.header}>\n            Hi love :)\n          </div>\n          <TextInput\n            value={this.state.email}\n            onChange={(e) => this.setState({ email: e.target.value })}\n            placeholder=\"email\"\n            type=\"text\"\n            width=\"80%\"\n          />\n          <TextInput\n            customStyle={{ marginTop: '15px' }}\n            value={this.state.password}\n            onChange={(e) => this.setState({ password: e.target.value })}\n            placeholder=\"password\"\n            type=\"password\"\n            width=\"80%\"\n          />\n          <input \n            className={styles.button}\n            type=\"submit\"\n            value=\"Login\"\n            tabIndex={0}\n          />\n        </form>\n      </div>\n    );\n  }\n}\n\nexport default withRouter(withFirebase(LoginPage));","import React from 'react';\nimport Countdown from 'react-countdown';\n\nimport styles from './styles.module.css';\n\nclass CountdownDisplay extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.props = props;\n  }\n\n  render() {\n\n    const renderer = (props) => {\n      if (props.completed) {\n        return <div className={styles.text}>We're together!</div>;\n      }\n\n      return <div className={styles.text}>{props.days}d {props.hours}h {props.minutes}m {props.seconds}s</div>;\n    };\n\n    return (\n      <div className={styles.container}>\n        <u className={styles.smallText}>\n          Countdown to 6 month anniversary\n        </u>\n        <Countdown\n          date=\"2020-04-06T05:00:00+00:00\"\n          renderer={renderer}\n        >\n        </Countdown>\n      </div>\n    );\n  }\n}\n\nexport default CountdownDisplay;","import React from 'react';\nimport { Redirect, withRouter } from 'react-router-dom';\nimport { Fade } from 'react-slideshow-image';\nimport Countdown from 'react-countdown';\nimport { useWindowSize } from '@react-hook/window-size';\nimport Confetti from 'react-confetti';\n\nimport styles from './styles.module.css';\nimport { withFirebase } from '../../components/Firebase/firebase';\nimport CountdownDisplay from '../../components/CountdownDisplay';\n\nconst DYLAN_IMAGE_MODE = 'dylan-pics';\nconst COUPLE_IMAGE_MODE = 'couple-pics';\nconst ALL_IMAGE_MODE = 'all';\n\nclass SlideshowPage extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      imageMode: '',\n      imageUrls: []\n    };\n\n    this.allImages = {};\n\n    this.firebase = props.firebase;\n    this.fetchAllImageUrls = this.fetchAllImageUrls.bind(this);\n    this.updateImageUrlsAndImageMode = this.updateImageUrlsAndImageMode.bind(this);\n  }\n\n  componentDidMount() {\n    this.fetchAllImageUrls();\n  }\n\n  fetchAllImageUrls = (callback) => {\n    this.firebase.fetchAllImageUrls(res => {\n      if (res.success) {\n        res.data.forEach((imageSet) => {\n          this.allImages[imageSet.name] = imageSet.urls;\n        });\n        this.updateImageUrlsAndImageMode(COUPLE_IMAGE_MODE);\n      } else {\n        console.error(res.err);\n      }\n    });\n  };\n\n  updateImageUrlsAndImageMode = (newImageMode) => {\n    let oldImageMode = this.state.imageMode;\n    if (oldImageMode === newImageMode) {\n      return;\n    }\n\n    var newImageUrls = [];\n    if (newImageMode === ALL_IMAGE_MODE) {\n      Object.keys(this.allImages).forEach((key) => newImageUrls.push(...this.allImages[key]));\n    } else {\n      newImageUrls.push(...this.allImages[newImageMode]);\n    }\n    this.setState({\n      imageMode: newImageMode,\n      imageUrls: this._shuffleArray(newImageUrls)\n    });\n  };\n\n  _shuffleArray = (array) => {\n    for (let i = array.length - 1; i > 0; i--) {\n      const j = Math.floor(Math.random() * (i + 1));\n      [array[i], array[j]] = [array[j], array[i]];\n    }\n    return array;\n  };\n\n  render() {\n\n    const fadeProperties = {\n      duration: 5000,\n      transitionDuration: 500,\n      infinite: true,\n      indicators: false,\n    }\n\n    return (\n      <div className={styles.container}>\n      <Confetti width={window.innerWidth} height={window.innerHeight} recycle={false} />\n        <div className={styles.buttonContainer}>\n          <div \n            className={this.state.imageMode === COUPLE_IMAGE_MODE ? styles.buttonSelected : styles.button}\n            role=\"button\"\n            onClick={(e) => this.updateImageUrlsAndImageMode(COUPLE_IMAGE_MODE)}\n          >\n            Couple\n          </div>\n          <div\n            className={this.state.imageMode === ALL_IMAGE_MODE ? styles.buttonSelected : styles.button}\n            role=\"button\"\n            onClick={(e) => this.updateImageUrlsAndImageMode(ALL_IMAGE_MODE)}\n          >\n            Both\n          </div>\n          <div \n            className={this.state.imageMode === DYLAN_IMAGE_MODE ? styles.buttonSelected : styles.button}\n            role=\"button\"\n            onClick={(e) => this.updateImageUrlsAndImageMode(DYLAN_IMAGE_MODE)}\n          >\n            Dylan\n          </div>\n        </div>\n\n        <Fade {...fadeProperties} className={styles.gallery}>\n          {\n            this.state.imageUrls.map((url, index) => <img key={index} src={url} className={styles.image} />)\n          }\n        </Fade>\n        <CountdownDisplay />\n      </div>\n    );\n  }\n}\n\nexport default withRouter(withFirebase(SlideshowPage));\n\n","import React from 'react';\nimport { isAuthenticated } from '../components/JWT/utils';\nimport { Route, Redirect, withRouter } from 'react-router-dom';\n\nclass ProtectedRoute extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      hasAccess: false,\n      isLoaded: false\n    };\n\n    this.checkAccess = this.checkAccess.bind(this);\n  }\n\n  componentDidMount() {\n    this.checkAccess();\n  }\n\n  checkAccess = () => {\n    const isUserAuthenticated = isAuthenticated();\n    this.setState({\n      hasAccess: isUserAuthenticated,\n      isLoaded: true\n    });\n  };\n\n  render() {\n    if (!this.state.isLoaded) {\n      return null;\n    }\n\n    const { component: Component, ...rest } = this.props;\n\n    return (\n      <Route\n        {...rest}\n        render={(props) => {\n          return this.state.hasAccess ? (\n            <Component {...props} />\n          ) : (\n            <Redirect to=\"/\" />\n          );\n        }}\n      />\n    );\n  }\n}\n\nexport default withRouter(ProtectedRoute);","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter, Switch, Route } from 'react-router-dom';\nimport Firebase, { FirebaseContext } from './components/Firebase/firebase';\nimport * as serviceWorker from './serviceWorker';\n\nimport LoginPage from './containers/LoginPage';\nimport SlideshowPage from './containers/SlideshowPage';\nimport ProtectedRoute from './routes/ProtectedRoute';\n\nReactDOM.render(\n  <FirebaseContext.Provider value={new Firebase()}>\n    <BrowserRouter>\n      <Switch>\n        <Route exact path=\"/\" component={LoginPage} />\n        <ProtectedRoute exact path=\"/iloveyou\" component={SlideshowPage} />\n        <Route component={LoginPage} />\n      </Switch>\n    </BrowserRouter>\n  </FirebaseContext.Provider>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"styles_container__2tJR3\",\"form\":\"styles_form__GwXlb\",\"header\":\"styles_header__1UISp\",\"subheader\":\"styles_subheader__3VhGL\",\"button\":\"styles_button__3y1M6\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"styles_container__2MdFG\",\"text\":\"styles_text__iqrqT\",\"smallText\":\"styles_smallText__2nesC\"};"],"sourceRoot":""}